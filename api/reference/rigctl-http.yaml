openapi: 3.1.0
info:
  title: rigctl-http
  version: '0.1'
  license:
    name: MIT
servers:
  - url: 'http://localhost:8080'
paths:
  /frequency:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  raw:
                    type: string
                  data:
                    $ref: '#/components/schemas/Frequency'
    put:
      requestBody:
        content:
          application/json:
            $ref: '#/components/schemas/Frequency'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  raw:
                    type: string
                  data:
                    $ref: '#/components/schemas/Frequency'
  /powerstat:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  raw:
                    type: string
                  data:
                    $ref: '#/components/schemas/Powerstat'
    put:
      requestBody:
        content:
          application/json:
            $ref: '#/components/schemas/Powerstat'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  raw:
                    type: string
                  data:
                    $ref: '#/components/schemas/Powerstat'
  /mode:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  raw:
                    type: string
                  data:
                    $ref: '#/components/schemas/Mode'
    put:
      requestBody:
        content:
          application/json:
            $ref: '#/components/schemas/Mode'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  raw:
                    type: string
                  data:
                    oneof:
                      - $ref: '#/components/schemas/Mode'
                      - $ref: '#/components/schemas/cmdOptions'
  /mode/_options:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
                  raw:
                    type: string
                  data:
                    $ref: '#/components/schemas/cmdOptions'
components:
  schemas:
    cmdOptions:
      title: cmdOptions
      type: object
      examples:
        - options:
            - FM
            - AM
            - USB
            - LSB
      properties:
        options:
          type: array
          items:
            type: string
    Frequency:
      title: Frequency
      type: object
      examples:
        - frequency: 145500000
      properties:
        frequency:
          type: string
      required:
        - frequency
    Powerstat:
      title: Powerstat
      type: object
      examples:
        - status: 1
      properties:
        status:
          type: integer
          minimum: 0
          maximum: 2
      required:
        - status
    Mode:
      title: Mode
      type: object
      examples:
        - mode: FM
      properties:
        mode:
          type: string
      required:
        - mode
